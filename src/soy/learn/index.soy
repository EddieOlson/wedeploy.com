{namespace learn}

/**
 * This template will be rendered by SoyWeb when the user loads static.soy.
 * It deliberately includes dummy data so the designer can get a feel for how
 * the task list will appear with real data rather with minimal copy and paste.
 */
{template .soyweb}
{call main.layout}
	{param content kind="html"}
		<link rel="stylesheet" href="/vendor/styles/codemirror.css">
		<link rel="stylesheet" href="/vendor/styles/mdn-like.css">
		<script src="/vendor/scripts/codemirror.js"></script>
		<script src="/vendor/scripts/javascript.js"></script>

		<link rel="stylesheet" href="/styles/docs.css">

		<nav class="topbar topbar-inverse">
			<div class="topbar-logo">
				<a class="topbar-logo-link" href="/">
					<span class="icon-16-launchpad-logo"></span>
					<span class="topbar-logo-text">Launchpad <span class="topbar-logo-complementary">Project</span></span>
				</a>
			</div>
			<ul class="topbar-list">
				<li class="topbar-item">
					<a class="topbar-link" href="/">Product</a>
				</li>
				<li class="topbar-item">
					<a class="topbar-link topbar-link-selected" href="/learn">Learn</a>
				</li>
				<li class="topbar-item">
					<a class="topbar-link" href="/dashboard/login/signin">Login</a>
				</li>
			</ul>
		</nav>

		<main class="docs">
			<div class="container">
				<div class="row">
					<nav class="docs-nav col-xs-12 col-sm-3">
						<p class="docs-nav-group">What is?</p>
						<ul class="docs-nav-list">
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
						</ul>

						<p class="docs-nav-group">How it works?</p>
						<ul class="docs-nav-list">
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
						</ul>

						<p class="docs-nav-group">How to use?</p>
						<ul class="docs-nav-list">
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
							<li class="docs-nav-item">
								<a href="#" class="docs-nav-link">Lorem ipsum dolor sit</a>
							</li>
						</ul>
					</nav>
					<article class="docs-content col-xs-12 col-sm-6 col-sm-offset-1">
						<h1>Lorem ipsum dolor sit amet, consectetur</h1>

						<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo expedita officiis incidunt molestias quia, perspiciatis ad reiciendis voluptas ab natus! Repellendus possimus labore mollitia eum tempore quae, reprehenderit obcaecati aliquid!</p>

						<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo expedita officiis incidunt molestias quia, perspiciatis ad reiciendis voluptas ab natus! Repellendus possimus labore mollitia eum tempore quae, reprehenderit obcaecati aliquid!</p>

						{literal}<textarea class="code" data-mode="x-java">import com.demo.util.MyType;
	import com.demo.util.MyInterface;

	public enum Enum {
	  VAL1, VAL2, VAL3
	}

	public class Class&lt;T, V&gt; implements MyInterface {
	  public static final MyType&lt;T, V&gt; member;

	  private class InnerClass {
	    public int zero() {
	      return 0;
	    }
	  }

	  @Override
	  public MyType method() {
	    return member;
	  }

	  public void method2(MyType&lt;T, V&gt; value) {
	    method();
	    value.method3();
	    member = value;
	  }
	}</textarea>{/literal}

						<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo expedita officiis incidunt molestias quia, perspiciatis ad reiciendis voluptas ab natus! Repellendus possimus labore mollitia eum tempore quae, reprehenderit obcaecati aliquid!</p>

						<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo expedita officiis incidunt molestias quia, perspiciatis ad reiciendis voluptas ab natus! Repellendus possimus labore mollitia eum tempore quae, reprehenderit obcaecati aliquid!</p>

						{literal}<textarea class="code" data-mode="javascript">for (var i = 0; i < code.length; i++) {
		CodeMirror.fromTextArea(code[i], {
			mode: code[i].dataset.mode ? 'text/' + code[i].dataset.mode : '',
			lineNumbers: true,
			matchBrackets: true,
			indentUnit: 2,
			indentWithTabs: false,
			theme: 'dracula',
			viewportMargin: Infinity,
			readOnly: true
		});
	}</textarea>{/literal}
					</article>
				</div>
			</div>
		</main>

		<script src="/scripts/highlight.js"></script>
	{/param}
{/call}
{/template}

---
title: "Sign-in With Password"
description: "Let your users authenticate using their emails and passwords."
headerTitle: "Auth"
layout: "guide"
weight: 3
srcFilePath: src/pages/docs/auth/sign-in-with-password.md
---

{namespace hDbAt}

/**
 * @param page
 * @param site
 */
{template .render}
	{call guide.render data="all"}
		{param content kind="html"}
			
<h3>{$page.title}</h3>
<h6>{$page.description}</h6>
<aside>
<p>If you are unfamiliar with our API, please visit the <a href="/docs/intro/api-clients.html">API Clients</a> page first to learn how to install and configure it.</p>
</aside>
<article id="1">
<h2>Authenticate</h2>
<p>To sign in using email and password, call this method:</p>
{call ElectricCode.render}{param code kind="text"}{literal}WeDeploy
    .auth('https://<serviceID>-<projectID>.wedeploy.io')
    .signInWithEmailAndPassword("user@domain.com", "password")
    .then(function(user) {
        // User is signed in.
    })
    .catch(function(err) {
        // User is not signed in.
    });{/literal}{/param}{param mode: 'javascript' /}{/call}{call ElectricCode.render}{param code kind="text"}{literal}WeDeploy
    .auth('https://<serviceID>-<projectID>.wedeploy.io')
    .signInWith(username: "user@domain.com", password: "password")
    .then { auth -> Void in
        // User is signed in.
    }
    .catch { err in
        // User is not signed in.
    }{/literal}{/param}{param mode: 'swift' /}{/call}{call ElectricCode.render}{param code kind="text"}{literal}WeDeploy
    .auth("<auth-url>")
    .signIn("user@domain.com", "password")
    .execute();{/literal}{/param}{param mode: 'text/x-java' /}{/call}</article>
<h2>What's next?</h2>
<p>Now we're ready to start enabling other <a href="/docs/auth/sign-in-with-facebook.html">login providers like Facebook</a>.</p>


			<input type="hidden" value="{$page.title}">
			<input type="hidden" value="{$site.title}">
		{/param}
	{/call}
{/template}


/**
 *
 */
{template .soyweb}
	{call base.render data="all"}
		{param content kind="html"}
			{call .render data="all" /}
		{/param}
	{/call}
{/template}

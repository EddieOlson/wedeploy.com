---
title: "Sign-in With GitHub"
description: "Let your users authenticate using their GitHub accounts."
headerTitle: "Auth"
layout: "guide"
weight: 6
srcFilePath: src/pages/docs/auth/sign-in-with-github.md
---

{namespace Ujnso}

/**
 * @param page
 * @param site
 */
{template .render}
	{call guide.render data="all"}
		{param content kind="html"}
			
<h3>{$page.title}</h3>
<h6>{$page.description}</h6>
<aside>
<p>If you are unfamiliar with our API, please visit the <a href="/docs/intro/api-clients.html">API Clients</a> page first to learn how to install and configure it.</p>
</aside>
<article id="1">
<h2>Authenticate</h2>
<p>Your users can authenticate in a way that redirects them to GitHub's sign-in page, where they're going to type their credentials, and then redirect back to your application.</p>
{call ElectricCode.render}{param code kind="text"}{literal}var auth = WeDeploy.auth('https://<serviceID>-<projectID>.wedeploy.io');

var provider = new auth.provider.Github();
provider.setProviderScope("user:email");

auth.signInWithRedirect(provider);

auth.onSignIn(function(user) {
    // Fires when user is signed in after redirect.
});{/literal}{/param}{param mode: 'javascript' /}{/call}{call ElectricCode.render}{param code kind="text"}{literal}let auth = WeDeploy.auth('https://<serviceID>-<projectID>.wedeploy.io');
let provider = AuthProvider(provider: .github, redirectUri: "my-app://")
provider.providerScope = "user:email"

auth.signInWithRedirect(provider: provider) { (user, error) in
    // Fires when user is signed in after redirect.
}

//Add WeDeploy.auth('https://<serviceID>-<projectID>.wedeploy.io').handle(url: url) in AppDelegate's open url method{/literal}{/param}{param mode: 'swift' /}{/call}{call ElectricCode.render}{param code kind="text"}{literal}// In AndroidManifest.xml, declare an intent filter for the Activity you want to receive the token.
// Don't forget to replace [mypackagename] with you application package name.
<intent-filter>
    <action android:name="android.intent.action.VIEW" />
    <category android:name="android.intent.category.DEFAULT" />
    <category android:name="android.intent.category.BROWSABLE" />
    <data android:scheme="oauth-wedeploy" android:host="[mypackagename]" />
</intent-filter>

// On your Activity:
AuthProvider provider = new AuthProvider.Builder()
    .redirectUri("oauth-wedeploy://[mypackagename]")
    .provider(Provider.GITHUB)
    .providerScope("user:email")
    .build();

WeDeploy.auth(authUrl)
    .signIn(this, provider);

// Use Auth auth = TokenAuth.getAuthFromIntent(intent); to get the token from the Intent{/literal}{/param}{param mode: 'text/x-java' /}{/call}<aside>
<h6><span class="icon-16-alert"></span> Attention</h6>
<p>Sign-in with GitHub provider is currently not available in Node.js and React Native environments.</p>
</aside>
</article>
<article id="2">
<h2>Setup app client id and secret</h2>
<p>Create a client id and client secret by <a href="https://github.com/settings/applications/new">registering your application</a> on GitHub.</p>
<aside>
<p>Please be sure to add the callback url <code>https://&lt;authID&gt;-&lt;projectID&gt;.wedeploy.io/oauth/token</code> in your application.
For local development, use <code>wedeploy.me</code> instead. To use with custom domains you can change the sufix <code>&lt;projectID&gt;.wedeploy.io</code> for your domain.</p>
</aside>
<p>After retrieving the client id and client secret you can configure them as environment variables of the authentication <code>wedeploy.json</code>.</p>
{call ElectricCode.render}{param code kind="text"}{literal}{
    "id": "auth",
    "image": "wedeploy/auth",
    "env": {
        "WEDEPLOY_AUTH_GITHUB": "true",
        "WEDEPLOY_AUTH_GITHUB_CLIENT_ID": "<your-github-client-id>",
        "WEDEPLOY_AUTH_GITHUB_CLIENT_SECRET": "<your-github-client-secret>"
    }
}{/literal}{/param}{param mode: 'application/json' /}{/call}<p>Or you can add those environment variables <a href="/docs/intro/environment-variables.html#2">using the Console</a>.</p>
<p><img src="/images/docs/auth/sign-in-with-github--project-container-environment.png" alt="Service Environment"></p>
</article>
<h2>What's next?</h2>
<p>Learn more about using <a href="/docs/auth/environment-variables.html">environment variables on Auth</a>.</p>


			<input type="hidden" value="{$page.title}">
			<input type="hidden" value="{$site.title}">
		{/param}
	{/call}
{/template}


/**
 *
 */
{template .soyweb}
	{call base.render data="all"}
		{param content kind="html"}
			{call .render data="all" /}
		{/param}
	{/call}
{/template}

---
title: "Getting Started"
description: "Send emails to your users using WeDeploy Email."
headerTitle: "Email"
layout: "guide"
weight: 1
srcFilePath: src/pages/docs/email/getting-started.md
---

{namespace IitOo}

/**
 * @param page
 * @param site
 */
{template .render}
	{call guide.render data="all"}
		{param content kind="html"}
			
<h3>Email</h3>
<h6>{$page.description}</h6>
<article id="1">
<h2>Introduction</h2>
<p>Our Email service enables you to send customized emails to your users and check on their status with just a few lines of code.</p>
</article>
<article id="2">
<h2>Try it yourself</h2>
<p>Want to see the process of deploying WeDeploy Email step by step?</p>
<div class="guide-btn-cta">
    <a class="btn btn-accent btn-sm" href="/tutorials/email-web" target="_blank" data-senna-off>
        <span class="icon-16-external"></span>Try the tutorial
    </a>
</div>
<div class="guide-aux-cta">
    or see a <a href="http://boilerplate-email.wedeploy.io" target="_blank" data-senna-off>live demo</a>.
</div>
</article>
<article id="3">
<h2>Configuring</h2>
<aside>
<p>All WeDeploy projects use a consistant file structure and configuration files to deploy apps with the CLI or GitHub. Learn more on our <strong><a href="/docs/intro/how-it-works.html">How It Works Page</a></strong>.</p>
</aside>
<p>Below is an example of a <code>wedeploy.json</code> for an Email container.</p>
{call ElectricCode.render}{param code kind="text"}{literal}{
    "id": "mail",
    "image": "wedeploy/email:beta"
}{/literal}{/param}{param mode: 'application/json' /}{/call}<p>The <code>id</code> for your services are uniquely determined by you.</p>
</article>
<h2>What's next?</h2>
<p>Now you can learn more about <a href="/docs/email/sending-email.html">sending emails to our users</a>.</p>


			<input type="hidden" value="{$page.title}">
			<input type="hidden" value="{$site.title}">
		{/param}
	{/call}
{/template}


/**
 *
 */
{template .soyweb}
	{call base.render data="all"}
		{param content kind="html"}
			{call .render data="all" /}
		{/param}
	{/call}
{/template}

---
title: "Deploying Node.js"
description: "Launch a Node.js application in few seconds."
headerTitle: "Deploy"
layout: "guide"
weight: 4
srcFilePath: src/pages/docs/deploy/deploying-nodejs.md
---

{namespace NXeml}

/**
 * @param page
 * @param site
 */
{template .render}
	{call guide.render data="all"}
		{param content kind="html"}
			
<h3>Node.js</h3>
<h6>{$page.description}</h6>
<article id="1">
<h2>Introduction</h2>
<p><a href="https://nodejs.org">Node.js</a> is an open-source, cross-platform runtime for developing server-side web applications using JavaScript. It has an event-driven architecture capable of asynchronous I/O.</p>
<p>We currently support Node.js 8 which comes with npm 5.</p>
</article>
<article id="2">
<h2>Try it yourself</h2>
<p>Want to see the process of deploying Node.js step by step?</p>
<div class="guide-btn-cta">
    <a class="btn btn-accent btn-sm" href="/tutorials/nodejs" target="_blank" data-senna-off>
        <span class="icon-16-external"></span>Try the tutorial
    </a>
</div>
<div class="guide-aux-cta">
    or see a <a href="http://boilerplate-nodejs.wedeploy.io" target="_blank" data-senna-off>live demo</a>.
</div>
</article>
<article id="3">
<h2>Configuring</h2>
<aside>
<p>All WeDeploy projects use a consistant file structure and configuration files to deploy apps with the CLI or GitHub. Learn more on our <strong><a href="/docs/deploy/how-it-works.html">How It Works Page</a></strong>.</p>
</aside>
<p>Below is an example of a <code>wedeploy.json</code> for a Node.js container.</p>
{call ElectricCode.render}{param code kind="text"}{literal}{
    "id": "nodejs"
}{/literal}{/param}{param mode: 'application/json' /}{/call}<p>The <code>id</code> for your services are uniquely determined by you.</p>
</article>
<h2>What's next?</h2>
<p>Now you can start building your Node.js based application.</p>


			<input type="hidden" value="{$page.title}">
			<input type="hidden" value="{$site.title}">
		{/param}
	{/call}
{/template}


/**
 *
 */
{template .soyweb}
	{call base.render data="all"}
		{param content kind="html"}
			{call .render data="all" /}
		{/param}
	{/call}
{/template}

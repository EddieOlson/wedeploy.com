---
title: "Clone Sample Repo"
description: "In this section, you'll learn how to authenticate users on the web using the WeDeploy API Client."
buttonTitle: "I cloned the repo"
tutorialTitle: "Getting started with WeDeploy Auth on the web"
parentId: "auth-web"
layout: "tutorial"
time: 30
weight: 4
srcFilePath: src/pages/tutorials/auth-web/clone-sample-repo.md
---

{namespace qGxeh}

/**
 * @param page
 * @param site
 */
{template .render}
	{call tutorial.render data="all"}
		{param content kind="html"}
			
<h4>Clone Sample Repo</h4>
<p>First, you'll clone a sample repo that contains the necessary files and directories for deploying a site with Auth.</p>
<p>Run this command in your terminal:</p>
{call ElectricCode.render}{param code kind="text"}{literal}git clone https://github.com/wedeploy/tutorial-auth-web.git{/literal}{/param}{param mode: 'text' /}{/call}<aside>
<h6><span class="icon-16-star"></span> Pro Tip</h6>
<p>Building an app with multiple services is very easy with WeDeploy. Every directory that contains a <code>wedeploy.json</code> will be treated as a separate service. If a specific image type is not detected, we will scan the conents of the directory and deploy the service that is most like your source code (<code>package.json</code> = Node.js, <code>Dockerfile</code> = Custom Docker Image, <code>index.html</code> = static hosting).</p>
{call ElectricCode.render}{param code kind="text"}{literal}yourApp
├── auth
│   └── wedeploy.json
├── db
│   └── wedeploy.json
└── Docker
    ├── wedeploy.json
    └── Dockerfile{/literal}{/param}{param mode: 'xml' /}{/call}</aside>


			<input type="hidden" value="{$page.title}">
			<input type="hidden" value="{$site.title}">
		{/param}
	{/call}
{/template}


/**
 *
 */
{template .soyweb}
	{call base.render data="all"}
		{param content kind="html"}
			{call .render data="all" /}
		{/param}
	{/call}
{/template}


{namespace qLfAe}

/**
 * @param page
 * @param site
 */
{template .render}
	{call guide.render data="all"}
		{param content kind="html"}
			
<h3>Java</h3>
<h6>{$page.description}</h6>
<article id="1">
<h2>Introduction</h2>
<p><a href="https://www.oracle.com/java/">Java</a> is a concurrent, class-based, object-oriented language expressly designed for use in the distributed environment of the web. It is normally compiled to the binary format defined in the JVM Specification.</p>
<p>We currently support Java 8.</p>
</article>
<article id="2">
<h2>Try it yourself</h2>
<p>Want to see the process of deploying Java step by step?</p>
<div class="guide-btn-cta">
    <a class="btn btn-accent btn-sm" href="/tutorials/java" target="_blank" data-senna-off>
        <span class="icon-16-external"></span>Try the tutorial
    </a>
</div>
<div class="guide-aux-cta">
    or see a <a href="http://boilerplate-java.wedeploy.io" target="_blank" data-senna-off>live demo</a>.
</div>
</article>
<article id="3">
<h2>Configuring</h2>
<aside>
<p>All WeDeploy projects use a consistant file structure and configuration files to deploy apps with the CLI or GitHub. Learn more on our <strong><a href="/docs/deploy/how-it-works.html">How It Works Page</a></strong>.</p>
</aside>
<p>Below is a few examples of a <code>wedeploy.json</code> for the Java container.</p>
{call ElectricCode.render}{param code kind="text"}{literal}{
    "id": "java",
    "image": "wedeploy/java:beta",
    "hooks": {
    "build": "gradle -Dorg.gradle.native=false clean build -x test"
  }
}{/literal}{/param}{param mode: 'gradle' /}{/call}{call ElectricCode.render}{param code kind="text"}{literal}{
    "id": "java",
    "image": "wedeploy/java:beta",
    "hooks": {
    "build": "mvn package"
  }
}{/literal}{/param}{param mode: 'maven' /}{/call}{call ElectricCode.render}{param code kind="text"}{literal}{
    "id": "java",
    "image": "wedeploy/java:beta",
    "hooks": {
    "build": "ant build"
  }
}{/literal}{/param}{param mode: 'ant' /}{/call}<p>The <code>id</code> for your services are uniquely determined by you.</p>
</article>
<h2>What's next?</h2>
<p>Now you can start building your Java based application.</p>


			<input type="hidden" value="{$page.title}">
			<input type="hidden" value="{$site.title}">
		{/param}
	{/call}
{/template}

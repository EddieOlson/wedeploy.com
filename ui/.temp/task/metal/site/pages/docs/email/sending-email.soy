
{namespace tlyrr}

/**
 * @param page
 * @param site
 */
{template .render}
	{call guide.render data="all"}
		{param content kind="html"}
			
<h3>{$page.title}</h3>
<h6>{$page.description}</h6>
<aside>
<p>If you are unfamiliar with our API, please visit the <a href="/docs/intro/api-clients.html">API Clients</a> page first to learn how to install and configure it.</p>
</aside>
<article id="1">
<h2>Sending email</h2>
<p>In order to send emails, we can simply make a request to the url of our service and include some required parameters like <code>from</code>, <code>to</code>, and <code>subject</code>.</p>
{call ElectricCode.render}{param code kind="text"}{literal}WeDeploy
    .email('<serviceID>-<projectID>.wedeploy.io')
    .auth('<your-project-master-token>')
    .from('from@domain.com')
    .to('to@domain.com')
    .subject('Hi there!')
    .send()
    .then(function(response) {
        console.log('Email ID:', response);
    })
    .catch(function(error) {
        // Some error has happened
    });{/literal}{/param}{param mode: 'javascript' /}{/call}{call ElectricCode.render}{param code kind="text"}{literal}WeDeploy
    .email('<serviceID>-<projectID>.wedeploy.io')
    .from(self.username)
    .to(self.username)
    .subject("subject")
    .message("body")
    .send()
    .then { id in
        print("Email ID: \(id)")
    }
    .catch { error in
        // Some error has happened
    }{/literal}{/param}{param mode: 'swift' /}{/call}{call ElectricCode.render}{param code kind="text"}{literal}WeDeploy
    .email("<serviceID>-<projectID>.wedeploy.io/emails")
    .from("from@domain.com")
    .to("to@domain.com")
    .subject("Hi there!")
    .send()
    .execute();{/literal}{/param}{param mode: 'text/x-java' /}{/call}<p>As a result, we'll receive an email ID. This doesn't indicate that the email has already sent, it actually just means that it was added to the email queue. See <a href="/docs/email/checking-status.html">&quot;checking the email status&quot;</a> to learn more about email status.</p>
</article>
<article id="2">
<h2>Reference</h2>
<p>Here is a list of all the email parameters you can pass.</p>
<div class="table-container">
<table>
<thead>
<tr><th>Parameter</th><th>Type</th><th>Description</th></tr>
</thead>
<tbody>
<tr><td>bcc</td><td>string</td><td>Bcc recipient email address. Multiple addresses should be defined in multiple parameters.</td></tr>
<tr><td>cc</td><td>string</td><td>Cc recipient email address. Multiple addresses should be defined in multiple parameters.</td></tr>
<tr><td>from</td><td>string</td><td>Sender email address.</td></tr>
<tr><td>message</td><td>string</td><td>HTML content of your email message. Up to 5MB.</td></tr>
<tr><td>priority</td><td>number</td><td>Used by email clients to define a message's importance. From 1 to 5 where '1' is highest and '5' is the lowest priority.</td></tr>
<tr><td>replyTo</td><td>string</td><td>Append a reply-to address to your email message.</td></tr>
<tr><td>subject</td><td>string</td><td>Subject of your email. Up to 1MB.</td></tr>
<tr><td>to</td><td>string</td><td>Recipient email address. Multiple addresses should be defined in multiple parameters.</td></tr>
</tbody>
</table>
</div>
</article>
<h2>What's next?</h2>
<p>Now that you sent an email, you can learn <a href="/docs/email/checking-status.html">how to check on its status</a>.</p>


			<input type="hidden" value="{$page.title}">
			<input type="hidden" value="{$site.title}">
		{/param}
	{/call}
{/template}

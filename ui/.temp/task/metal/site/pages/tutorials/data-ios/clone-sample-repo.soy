
{namespace AkVgi}

/**
 * @param page
 * @param site
 */
{template .render}
	{call tutorial.render data="all"}
		{param content kind="html"}
			
<h4>Clone Sample Repo</h4>
<p>First, you'll clone a sample repo that contains the necessary files and directories for deploying a site with Data and for creating an app that make use of those services.</p>
<p>Run this command in your terminal:</p>
{call ElectricCode.render}{param code kind="text"}{literal}git clone https://github.com/wedeploy/tutorial-data-ios.git{/literal}{/param}{param mode: 'text' /}{/call}<p>This project contains a folder named <code>app</code> that we will use to learn how to use the WeDeploy API client.  This folder is not used by the WeDeploy infrastructure but we have it here to make the example simpler by not using two different repos (one for WeDeploy project and one for the app).</p>
<aside>
<h6><span class="icon-16-star"></span> Pro Tip</h6>
<p>Building an app with multiple services is very easy with WeDeploy. Every directory that contains a <code>wedeploy.json</code> will be treated as a separate service. If a specific image type is not detected, we will scan the conents of the directory and deploy the service that is most like your source code (<code>package.json</code> = Node.js, <code>Dockerfile</code> = Custom Docker Image, <code>index.html</code> = static hosting).</p>
{call ElectricCode.render}{param code kind="text"}{literal}yourApp
├── auth
│   └── wedeploy.json
├── db
│   └── wedeploy.json
└── Docker
    ├── wedeploy.json
    └── Dockerfile{/literal}{/param}{param mode: 'xml' /}{/call}</aside>


			<input type="hidden" value="{$page.title}">
			<input type="hidden" value="{$site.title}">
		{/param}
	{/call}
{/template}


{namespace docsIntroUsingTheCommandLineHtml}

/**
 *
 */
{template .render}
	{call guide.render data="all"}
		{param content kind="html"}
			<h1>Using the Command-line</h1>
<h6>The WeDeploy Command-Line Interface is a tool for helping you to use the WeDeploy platform by providing support to things like creating, managing, and scaling applications.</h6>
<article id="article_1">
<h2>Dependencies</h2>
<p>The following external software dependencies are necessary to correctly run some commands:</p>
<p>a) <a href="https://git-scm.com/">Git</a> (download for <a href="https://git-scm.com/download/linux">Linux</a>, <a href="https://git-scm.com/download/mac">macOS</a>, <a href="https://git-scm.com/download/win">Windows</a>)</p>
<p>b) <a href="https://www.docker.com/">Docker</a> (download for <a href="https://docs.docker.com/engine/installation/linux/">Linux</a>, <a href="https://download.docker.com/mac/stable/Docker.dmg">macOS</a>, <a href="https://download.docker.com/win/stable/InstallDocker.msi">Windows</a>)</p>
<p>Docker version 1.12.0 or later is required. If you use macOS, install the Docker for Mac. If you use Windows, please install Docker for Windows. Docker Toolbox, still available for earlier Mac and Windows systems is not supported.</p>
</article>
<article id="article_2">
<h2>Installing</h2>
<p>If you use a Unix-like system such as macOS or Linux open your Terminal and run:</p>
{call ElectricCode.render}{param code kind="text"}{literal}curl http://cdn.wedeploy.com/cli/latest/wedeploy.sh -sL | bash{/literal}{/param}{param mode: 'xml' /}{/call}<p>If you use Windows, you probably want the <a href="https://bin.equinox.io/c/8WGbGy94JXa/cli-stable-windows-amd64.msi">Windows amd64 installer</a>. For other systems, check a list of <a href="https://bin.equinox.io/c/8WGbGy94JXa/cli-stable-windows-amd64.zip">all builds available</a>.</p>
<p><strong>Check your docker configuration:</strong> docker comes with a 2.0GB maximum memory limit by default on macOS and Windows. You should increase this limit to at least 4.0GB.</p>
</article>
<article id="article_3">
<h2>Creating projects locally</h2>
<p>You are able to organize your services by project. Inside each project you can create services (called containers here), like static hosting, data API, Auth service, etc.</p>
<p>Use <code>we create</code> to create projects and containers. You can create a project anywhere on your machine. Containers might be created one directory above a project for your convenience.</p>
{call ElectricCode.render}{param code kind="text"}{literal}Usage:
  we create --project <project> --container <container>{/literal}{/param}{param mode: 'xml' /}{/call}</article>
<article id="article_4">
<h2>Running projects locally</h2>
<p>For this demo we are going to use the hosting boilerplate.</p>
<ol>
<li>Start local infrastructure:</li>
</ol>
{call ElectricCode.render}{param code kind="text"}{literal}we run{/literal}{/param}{param mode: 'xml' /}{/call}<ol start="2">
<li>Clone this repository:</li>
</ol>
{call ElectricCode.render}{param code kind="text"}{literal}git clone https://github.com/wedeploy/boilerplate-hosting.git
cd boilerplate-hosting{/literal}{/param}{param mode: 'xml' /}{/call}<ol start="3">
<li>Link this container to a new project named demo:</li>
</ol>
{call ElectricCode.render}{param code kind="text"}{literal}we link --project demo{/literal}{/param}{param mode: 'xml' /}{/call}<ol start="4">
<li>Now your container should be accessible from <a href="http://hosting.demo.wedeploy.me">http://hosting.demo.wedeploy.me</a></li>
</ol>
<p><em>On the first first time it might take a few minutes while downloading the hosting image on the background.</em></p>
</article>
<article id="article_5">
<h2>Remotes and friendly host style</h2>
<p>Many commands requires <code>--project</code>, <code>--container</code>, or <code>--remote</code> flags. You can use the following patterns for passing these values:</p>
{call ElectricCode.render}{param code kind="text"}{literal}we <command> --project <project> --container <container>{/literal}{/param}{param mode: 'xml' /}{/call}<p>and the friendly host style:</p>
{call ElectricCode.render}{param code kind="text"}{literal}we <command> <container>.<project>.<remote address>{/literal}{/param}{param mode: 'xml' /}{/call}<p>or even</p>
{call ElectricCode.render}{param code kind="text"}{literal}we <command> <container>.<project> --remote <remote>{/literal}{/param}{param mode: 'xml' /}{/call}<p>For the local cloud, just don't add a <code>--remote</code> or <code>&lt;remote address&gt;</code> value like in:</p>
{call ElectricCode.render}{param code kind="text"}{literal}we log public.chat{/literal}{/param}{param mode: 'xml' /}{/call}<p>or to list all logs by containers on the project &quot;chat&quot;:</p>
{call ElectricCode.render}{param code kind="text"}{literal}we log chat{/literal}{/param}{param mode: 'xml' /}{/call}<p>Remotes can be managed in a similar fashion as git's remote command:</p>
{call ElectricCode.render}{param code kind="text"}{literal}$ we remote -v
wedeploy        wedeploy.io{/literal}{/param}{param mode: 'xml' /}{/call}<p>If you know how to use <code>git remote</code> you already know how to use <code>we remote</code>.</p>
<p>For your convenience we include the wedeploy cloud remote by default once you log in on the CLI app with <code>we login</code> (requested when necessary).</p>
<p>All commands that support <code>--project</code>, <code>--container</code>, and / or <code>--remote</code> support this host style as well.</p>
</article>
<article id="article_6">
<h2>Fetching project and container logs</h2>
<p>You can fetch projects and container logs with</p>
{call ElectricCode.render}{param code kind="text"}{literal}we log --project <project> --container <container>{/literal}{/param}{param mode: 'xml' /}{/call}<p>or with a friendly host style like</p>
{call ElectricCode.render}{param code kind="text"}{literal}we log <container>.<project>.wedeploy.me{/literal}{/param}{param mode: 'xml' /}{/call}<h3>Examples:</h3>
<p>See the logs for the last 20min for the data container on the wechat project:</p>
{call ElectricCode.render}{param code kind="text"}{literal}we log --project wechat --container data --since 20min{/literal}{/param}{param mode: 'xml' /}{/call}<p>Watch for logs on the hosting container on the demo project:</p>
{call ElectricCode.render}{param code kind="text"}{literal}we log hosting.demo.wedeploy.me --watch{/literal}{/param}{param mode: 'xml' /}{/call}</article>
<article id="article_7">
<h2>Listing projects and containers</h2>
<p>Watch the listing of all projects running locally:</p>
{call ElectricCode.render}{param code kind="text"}{literal}we list --watch{/literal}{/param}{param mode: 'xml' /}{/call}<p>List all your projects running on the WeDeploy cloud:</p>
{call ElectricCode.render}{param code kind="text"}{literal}we list wedeploy.io{/literal}{/param}{param mode: 'xml' /}{/call}<p>or</p>
{call ElectricCode.render}{param code kind="text"}{literal}we list --remote wedeploy{/literal}{/param}{param mode: 'xml' /}{/call}</article>
		{/param}
	{/call}
{/template}

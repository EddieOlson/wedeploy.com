
{namespace docsIntroConfigurationFilesHtml}

/**
 *
 */
{template .render}
	{call guide.render data="all"}
		{param content kind="html"}
			<h1>Understanding Configuration Files</h1>
<h6>This is an overview of how WeDeploy uses json files to help you to configure your project.</h6>
<article id="article_1">
<h2>Project file reference</h2>
<p>The <code>project.json</code> file is a JSON file defining the project attributes. The default path for a <code>project.json</code> is <code>./project.json</code>.</p>
<p>WeDeploy uses this json file to reference to project in case it's already created. If the project does not exist, it creates a new project for you.</p>
<p><strong>Supported fields:</strong></p>
<table class="table">
  <tr>
    <th>Field</th> <th>Description</th>
  </tr>
  <tr>
    <td>id</td> <td>Project unique id.</td>
  </tr>
  <tr>
    <td>name</td> <td>Project name.</td>
  </tr>
  <tr>
    <td>homeContainer</td> <td>Service that will be receiving the requests in the base custom domain.</td>
  </tr>
  <tr>
    <td>customDomains</td> <td>Custom domains used instead the domain generated by wedeploy.</td>
  </tr>
</table>
<p><br></p>
<p><strong>Validations:</strong></p>
<p><strong>id</strong>: The id must be unique, and you may get an error message in case someone else is already using this project id.</p>
<p><strong>customDomains</strong>: The custom domain must be unique, and you may get an error message in case someone else is already using this custom domain.</p>
<p><br></p>
<p><strong>Usage:</strong></p>
<p><code>project.json</code></p>
{call ElectricCode.render}{param code kind="text"}{literal}{
  "id": "projectexample",
  "homeContainer": "ui",
  "customDomains": ["projectexample.wedeploy.com"]
}{/literal}{/param}{param mode: 'json' /}{/call}</article>
<article id="article_2">
<h2>Service file reference</h2>
<p>The <code>container.json</code> file is a JSON file defining the service attributes and configurations. The default path for a <code>container.json</code> is <code>./&lt;service_folder&gt;/container.json</code>.</p>
<p>WeDeploy uses this json file to reference to service in case it's already created. If the service does not exist, it creates a new service for you.</p>
<p><strong>Supported fields:</strong></p>
<table class="table">
  <tr>
    <th>Field</th> <th>Description</th>
  </tr>
  <tr>
    <td>id</td> <td>Service uniq id.</td>
  </tr>
  <tr>
    <td>type</td> <td>Service stack/image type.</td>
  </tr>
  <tr>
    <td>hooks</td> <td>Callbacks that should be executed in the service lifecycle. Currently allowed: `build`.</td>
  </tr>
  <tr>
    <td>env</td> <td>Environment variables to be exported in the service lifecycle.</td>
  </tr>
  <tr>
    <td>description</td> <td>Short information about the service.</td>
  </tr>
</table>
<p><br></p>
<p><strong>Usage:</strong></p>
<p><code>container.json</code></p>
{call ElectricCode.render}{param code kind="text"}{literal}{
  "id": "conqueror",
  "type": "wedeploy/java",
  "description": "WeDeploy Service Example",
  "hooks": {
    "build": "./gradlew clean build installDist -x test"
  },
  "env": {
    "WEDEPLOY_USER": "user"
  }
}{/literal}{/param}{param mode: 'json' /}{/call}</article>
		{/param}
	{/call}
{/template}


{namespace docsAuthGettingStartedHtml}

/**
 *
 */
{template .render}
	{call guide.render data="all"}
		{param content kind="html"}
			<h1>Auth</h1>
<h6>Allow users to authenticate using passwords, popular federated identity providers like Google, Facebook, GitHub, and more using <em>WeDeployâ„¢ Auth</em>.</h6>
<div class="guide-btn-cta">
  <a class="btn btn-accent btn-sm" href="http://boilerplate-auth.wedeploy.io" target="_blank">
    <span class="icon-16-external"></span>See Live Demo
  </a>
</div>
<div class="guide-aux-cta">
  or read the <a href="https://github.com/wedeploy/boilerplate-auth/tree/js" target="_blank">source code</a>.
</div>
<article id="article_1">
<h2>Install dependencies</h2>
<p>This section assumes that you already have the <strong>WeDeploy CLI</strong> installed and <strong>Docker</strong> running. Make sure to <a href="/docs/intro/using-the-command-line.html">visit the installation guide</a> if you need help setting that up.</p>
<p>We also feature code snippets using the API Client, <a href="/docs/intro/using-the-api-client.html">visit this guide</a> in order to start using it.</p>
</article>
<article id="article_2">
<h2>Running locally</h2>
<ol>
<li>Start local infrastructure:</li>
</ol>
{call ElectricCode.render}{param code kind="text"}{literal}we run{/literal}{/param}{param mode: 'xml' /}{/call}<ol start="2">
<li>Clone this repository:</li>
</ol>
{call ElectricCode.render}{param code kind="text"}{literal}git clone -b js https://github.com/wedeploy/boilerplate-auth.git boilerplate-auth-js
cd boilerplate-auth-js{/literal}{/param}{param mode: 'xml' /}{/call}<ol start="3">
<li>Link this container with the local infrastructure:</li>
</ol>
{call ElectricCode.render}{param code kind="text"}{literal}we link{/literal}{/param}{param mode: 'xml' /}{/call}<ol start="4">
<li>Now your container is ready to be used:</li>
</ol>
{call ElectricCode.render}{param code kind="text"}{literal}http://authdemo.wedeploy.me{/literal}{/param}{param mode: 'xml' /}{/call}</article>
<article id="article_3">
<h2>Deploying to the cloud</h2>
<ol>
<li><a href="https://github.com/wedeploy/boilerplate-auth/fork">Fork this repository</a>.</li>
<li>Go to the <a href="http://dashboard.wedeploy.com">Dashboard</a> and create a project.</li>
<li>In the sidebar, click on <em>Deployment</em>.</li>
<li>Using your local machine, clone your Github fork:</li>
</ol>
{call ElectricCode.render}{param code kind="text"}{literal}git clone -b js https://github.com/<username>/boilerplate-auth{/literal}{/param}{param mode: 'xml' /}{/call}<ol start="5">
<li>Get into the folder: <code>cd boilerplate-auth</code>.</li>
<li>Using the content on <em>Deployment</em> page. Add the WeDeploy remote url:</li>
</ol>
{call ElectricCode.render}{param code kind="text"}{literal}git remote add wedeploy http://git.wedeploy.com/<projectID>.git{/literal}{/param}{param mode: 'xml' /}{/call}<ol start="7">
<li>Push your data to wedeploy git server: <code>git push wedeploy js:master</code>.</li>
<li>Once you see it in the Dashboard, your container will be ready to be used.</li>
</ol>
{call ElectricCode.render}{param code kind="text"}{literal}http://boilerplate-auth.wedeploy.io{/literal}{/param}{param mode: 'xml' /}{/call}</article>
<article id="article_4">
<h2>Key capabilities</h2>
<p>Easily add a complete sign-in system to your application. WeDeploy provides a ready-to-use auth solution that handles the UI flows for signing in users with email addresses and passwords, Google Sign-In, GitHub and Facebook Login.</p>
<p><strong>Email and password</strong></p>
<p>Authenticate users with their email addresses and passwords. Provides methods to create and manage users that use their email addresses and passwords to sign in, and sending password reset emails.</p>
<p><strong>Google</strong></p>
<p>Create a client id and client secret by <a href="https://developers.google.com/identity/protocols/OAuth2">registering your application</a> on Google.</p>
<p><strong>GitHub</strong></p>
<p>Create a client id and client secret by <a href="https://github.com/settings/applications/new">registering your application</a> on GitHub.</p>
<p><strong>Facebook</strong></p>
<p>Create an app ID by <a href="https://developers.facebook.com/docs/apps/register">registering your application</a> on Facebook.</p>
<p><strong>Manage Users</strong></p>
<p>Create, delete or update users with a simple API.</p>
</article>
<article id="article_5">
<h2>Initializing auth service</h2>
<p>By using WeDeploy API client you can initialize the authentication service by referencing its URL, like in the example below.</p>
{call ElectricCode.render}{param code kind="text"}{literal}WeDeploy.auth('http://<containerID>.<projectID>.wedeploy.me');{/literal}{/param}{param mode: 'js' /}{/call}<p>After initializing the authentication service URL, WeDeploy client stores its information for future calls.</p>
<p>Note that if you are initializing an auth service pointing to the Cloud you should use the proper domain:</p>
{call ElectricCode.render}{param code kind="text"}{literal}WeDeploy.auth('http://<containerID>.<projectID>.wedeploy.io');{/literal}{/param}{param mode: 'js' /}{/call}</article>
<h2>What's next?</h2>
<ul>
<li>Now we're ready to <a href="/docs/auth/js/manage-users.html">start managing your users</a>.</li>
</ul>

		{/param}
	{/call}
{/template}
